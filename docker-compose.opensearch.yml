services:
  opensearch:
    image: opensearchproject/opensearch:2.15.0
    env_file:
      - .env
    container_name: opensearch
    restart: on-failure
    tty: true
    environment:
      - discovery.type=single-node
      # Disables ML on data nodes
      # - plugins.ml_commons.only_run_on_ml_node=true
      # - plugins.ml_commons.max_ml_tasks_on_ml_node=0

      - DISABLE_SECURITY_PLUGIN=true 
      - "OPENSEARCH_JAVA_OPTS=-Xms1g -Xmx1g"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - opensearch-data:/usr/share/opensearch/data
      - ./setup_docker_opensearch.sh:/setup_docker_opensearch.sh
      - ./.env:/.env # make sure the .env file exists and is in your project root
    post_start:
      - command: bash -i /setup_docker_opensearch.sh
        user: root
        privileged: true
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200 >/dev/null 2>&1"]
      interval: 10s
      timeout: 10s
      retries: 5
    ports:
      - 9300:9200 # Use 9300 to avoid conflict with Elasticsearch's and Opensearch's default 9200
    networks:
      - opensearch-net

  opensearch-dashboards:
    container_name: opensearch-dashboards
    depends_on:
      opensearch:
        condition: service_healthy
    image: opensearchproject/opensearch-dashboards:2.15.0
    environment:
      - OPENSEARCH_SEARCH_DOMAIN=["http://opensearch:9300"]
      - DISABLE_SECURITY_DASHBOARDS_PLUGIN=true
    ports:
      - 5602:5601 # Use 5602 to avoid conflict with Kibana's 5601
    networks:
      - opensearch-net

volumes:
  opensearch-data:
    driver: local

networks:
  opensearch-net:
    driver: bridge